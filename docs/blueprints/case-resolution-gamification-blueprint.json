{"success": [{"id": "link_5", "level": "error", "description": "Hyperlinks in the index.md file is missing alternative text.", "fileHighlights": []}, {"id": "struct_1", "level": "error", "description": "Every Genesys Cloud blueprint should have a blueprint directory at the root of the project.  This directory should hold all assets associated with the blueprint."}, {"id": "struct_2", "level": "error", "description": "Every Genesys Cloud blueprint should have a blueprint/images directory that will contain all of the image assets for a project."}, {"id": "struct_3", "level": "error", "description": "Every Genesys Cloud blueprint should have a overview.png file that contains a high-level architecture diagram for the blueprint."}, {"id": "content_1", "level": "error", "description": "The front matter must be defined in the file or the blueprint will not appear in the Developer Center", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 1, "lineCount": 227, "lineContent": "---\ntitle: Integrate a Salesforce Metric to Genesys Cloud's Gamification System\nauthor: prince.merluza\nindextype: blueprint\nicon: blueprint\nimage: images/cover.png\ncategory: \nsummary: |\n  This Genesys Cloud Developer Blueprint provides a Gamification integration between Salesforce and Genesys Cloud\n---\n\nThis Genesys Cloud Developer Blueprint demonstrates how to configure external metrics in Genesys Cloud and how to use the API to update the values from Salesforce or any 3rd-party system.\n\n![Flowchart for the blueprint](./images/overview.png \"Flowchart\")\n\n## Scenario\n\nAn organization using the Gamification features of Genesys Cloud wants to add external metrics to score and rank their agents.\n\nIn this blueprint, a Salesforce metric is used based on the average number of days a user takes to resolve a case.\n\nThe concept can similarly be used with any metric or with any 3rd-party system by invoking the Gamification API to send daily value updates.\n\n## Solution components\n\n* **Genesys Cloud** - A suite of Genesys cloud services for enterprise-grade communications, collaboration, and contact center management. In this solution, you require a Genesys Cloud user account to authorize the Vue app integration with Genesys Cloud.\n* **Salesforce** - The Salesforce cloud customer relationship management (CRM) platform.\n* **Genesys Cloud for Salesforce managed package** - The managed package that contains all the installation components, including the Genesys Cloud for Salesforce SDK, necessary to run Genesys Cloud for Salesforce.\n* **Genesys Cloud for Salesforce SDK** - Allows you to customize actions in Genesys Cloud for Salesforce. This SDK is included in the managed package and uses the Salesforce Apex programming language.\n\n## Prerequisites\n\n### Specialized knowledge\n\n* Administrator-level knowledge of Genesys Cloud\n* Administrator-level knowledge of Salesforce and programming experience with Apex code\n\n### Genesys Cloud account requirements\n\n* A Genesys Cloud license. For more information, see [Genesys Cloud Pricing](https://www.genesys.com/pricing \"Opens the Genesys Cloud pricing page\").\n* [Genesys Cloud 3 license](https://www.genesys.com/pricing \"Genesys Cloud 3 license\") or [Genesys Cloud User 1 WEM Upgrade II](https://appfoundry.genesys.com/filter/genesyscloud/listing/814c259b-7e36-48e6-b6d2-5355b4146227 \"Genesys Cloud User 1 WEM Upgrade II\") or [Genesys Cloud User 2 WEM Upgrade I](https://appfoundry.genesys.com/filter/genesyscloud/listing/253f2cbb-5f9d-4349-a54e-1e8dd4a0f8a5 \"Genesys Cloud User 2 WEM Upgrade I\")\n* Master Admin role in Genesys Cloud. For more information, see [Roles and permissions overview](https://help.mypurecloud.com/?p=24360 \"Opens the Roles and permissions overview article\") in the Genesys Cloud Resource Center.\n* An OAuth client with roles that are assigned the Gamification permissions. For more information, see [OAuth client permissions for Genesys Cloud for Salesforce](https://help.mypurecloud.com/?p=188903 \"Opens the Genesys Cloud for Salesforce page\") and [Create an OAuth client](https://help.mypurecloud.com/?p=188023 \"Opens the resource page for creating an OAuth Client\") in the Genesys Cloud Resource Center.\n\n### Salesforce account requirements\n\n* A Salesforce organization with the Genesys Cloud for Salesforce integration installed and configured. For more information, see [Install or upgrade the Genesys Cloud for Salesforce managed package](https://help.mypurecloud.com/?p=39356/ \"Go to resource page for installing Genesys Cloud for Salesforce\") and [Set up a call center in Salesforce](https://help.mypurecloud.com/?p=10593 \"Go to page on setting up call center in Salesforce\") in the Genesys Cloud Resource Center.\n* The solutions engineer assigned a System Administrator profile. For more information, see Standard Profiles in the Salesforce documentation.\n\n## Gamification API\n\nBefore implementing the sample, let's take a quick look at the ['Write External Metric Data' API endpoint](https://developer.genesys.cloud/devapps/api-explorer#post-api-v2-employeeperformance-externalmetrics-data \"Go to API Explorer Gamification API \"). This API allows us to update the daily value of an external metric.\n\nSample Body:\n\n```JSON\n{\n    \"items\": [\n        {\n            \"metricId\": \"aaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\",\n            \"userId\": \"zzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz\",\n            \"dateOccurred\": \"2022-08-29\",\n            \"value\": 300,\n            \"count\": 20\n        }\n    ]   \n}\n```\n\n* `items` is an array containing update to a specific metric for a specific user. Multiple items in the array should be added for updating multiple metrics or multiple users.\n\n* `dateOccurred` is the date of recording the specific metric value. You may set this date 7 days in the past and 30 days into the future. At the time of writing, invoking the API with the same date will override the `value` and `count` properties. Since the `value` will not automatically accumulate, it's expected that the data are pre-aggregated and finalized in the external system every time the API is called.\n\n* `value` is the numerical value representing the metric. In this sample it will be the number of days it took to resolve the cases.\n\n* `count` is the number of data points. In this sample it will be the number of cases resolved on the day.\n\nKnowing how we can externally update a metric, let's now create an automated way for Salesforce to send these updates to Genesys Cloud.\n\n## Implementation steps\n\n### Turn on Gamification Settings on Genesys Cloud\n\nBy default, Gamification is turned off for the org. To turn it on, go to **Admin > Performance & Engagement > Gamification Settings** and enable the **Gamification** toggle.\n\n![Enable Gamification](./images/enable_gamification.png \"Enable Gamification\")\n\n### Create an External Metric in Genesys Cloud\n\nFirst, create an external metric in Genesys Cloud.\n\n1. Go to **Admin > Performance & Engagement > External Metric Definitions**\n2. Enter the following details for the External Metric\n\n    ![External Metric Configuration](./images/new_external_metric.png \"External Metric Configuration\")\n\n3. Save and Activate the Metric\n4. Take note of the **External ID** which will be used later in the Salesforce configuration.\n\n### Add the metric to a Gamification Profile\n\nCreate a new Gamification Profile or use an existing one and add the metric that was just created.\n\n1. Go to **Admin > Performance & Engagement > Gamification Profiles**\n2. Create or edit an existing profile.\n3. Under **Metrics** tab, add the previously created metric.\n4. Since we're looking at the number of days an agent takes to close a case, select any of the `Lower is Better` options in the Metric's `Objective Type`.\n\n### Create a custom User field in Salesforce to associate Genesys Cloud User ID\n\nSalesforce needs to be able to associate the SFDC user with their Genesys Cloud user account. One way to do this is add a custom field for Users in Salesforce.\n\nFor a guide on how to add custom fields to objects, click [here](https://help.salesforce.com/s/articleView?id=sf.adding_fields.htm&type=5 \"Go to guide for creating Custom Fields\")\n\nTo keep the field consistent with the rest of the instructions please name the fields `Genesys_Cloud_User_Id`:\n\n![New Custom User Field](./images/new_custom_field.png \"New Custom User Field\")\n\nAlso make sure to define the maximum length to at least 36 as Genesys Cloud User Ids (UUID format) tend to be that length.\n\n### Create the Apex Class for processing the metric\n\n1. From SFDC Setup, create a new Apex Class. [Official guide here](https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_qs_class.htm \"Go to guide for creating an Apex Class\").\n2. Enter the following Apex script to the class editor:\n\n    ```Java\n    public class GenesysCloudGamification {\n        \n        // Execute the event of calling Genesys Cloud API to update metric values\n        @InvocableMethod (label = 'Generate Genesys Cloud Metric')\n        public Static void createEvent(List<GCCXMetricFlowInput> attributes) {\n            GCCXMetricFlowInput input = attributes[0];\n            string metricId = input.metricId;\n            string gcUserId = input.gcUserId;\n            string sfdcUserId = input.sfdcUserId;\n            Date closed = Date.today();\n            \n            List<object> metrics = getMetrics(sfdcUserId);\n            \n            // Build the request body\n            JSONGenerator gen = JSON.createGenerator(true);\n            gen.writeStartObject();\n            gen.writeFieldName('items');\n            gen.writeStartArray();\n            gen.writeStartObject();\n            gen.writeStringField('metricId', metricId);\n            gen.writeStringField('userId', gcUserId);\n            gen.writeStringField('dateOccurred', formatDate(closed));\n            gen.writeNumberField('count', (Integer)metrics[0]);\n            gen.writeNumberField('value', (Integer)metrics[1]);\n            gen.writeEndObject();\n            gen.writeEndArray();\n            gen.writeEndObject();\n            \n            // Invoke the GC API\n            System.debug('Calling Genesys Cloud API with body: ' + gen.getAsString());\n            HttpResponse response = purecloud.SDK.Rest.post('/api/v2/employeeperformance/externalmetrics/data', gen.getAsString());\n            System.debug(response.getBody());\n        }\n        \n        // Format Date to yyyy-mm-dd\n        private static string formatDate(Date occurred) {\n            integer intDay = occurred.day();\n            integer intMonth = occurred.month();\n            integer intYear = occurred.year();\n            string day = String.valueOf(intDay);\n            string month = String.valueOf(intMonth);\n            string year = String.valueOf(intYear);\n            \n            if (intMonth < 10) {\n                month = '0' + month;\n            }\n            \n            return year + '-' + month + '-' + day;\n        }\n        \n        // Get the total days before case resolution and the count of cases closed today.\n        public static List<object> getMetrics(String sfdcUserId){\n            Date closed = Date.today();\n            List<Case> closedCases;\n            List<object> metrics = New List<object>();\n            try {\n                closedCases = [SELECT CreatedDate FROM Case WHERE ClosedDate = LAST_N_DAYS:1 AND OwnerId = :sfdcUserId];\n            }\n            catch (DmlException e) {\n                System.debug('getMetrics error: ' + e.getMessage());\n            }\n            integer count = closedCases.size();\n            integer totalDays = 0;\n            for (integer x=0; x<count; x++) {\n                date created = date.newInstance(closedCases[x].CreatedDate.year(), closedCases[x].CreatedDate.month(), closedCases[x].CreatedDate.day());\n                totalDays += created.daysBetween(closed);\n            }\n            \n            metrics.add(count);\n            metrics.add(totalDays);\n            return metrics;\n        }\n        \n        // Input data for the invocable method\n        public class GCCXMetricFlowInput {\n        @InvocableVariable(label='Metric ID' description='The Genesys Cloud Custom Metric ID' required=true)\n        public string metricId;\n        \n        @InvocableVariable(label='Genesys Cloud User ID' description='The ID of the Genesys Cloud User' required=true)\n        public string gcUserId;\n        \n        @InvocableVariable(label='SFDC User ID' description='The ID of the SFDC User' required=true)\n        public string sfdcUserId;\n        }\n    }\n    ```\n\n3. Save the Apex class.\n\n### Create the automated flow in Salesforce Flow Builder\n\nUsing Flow Builder, create a flow that will automatically run every time an SFDC user resolves or closes a Case.\n\n1. From SFDC Setup, create a new Flow. [Official Guide here](https://help.salesforce.com/s/articleView?id=sf.flow_build.htm&type=5 \"Go to official guide for building a flow\").\n2. Choose the `Record-Triggered Flow` as the Flow Type.\n![Create new flow](./images/create_new_flow.png \"New Custom User Field\")\n3. Configure the flow with the following settings:\n![Flow configuration](./images/flow_configuration.png \"Flow configuration\")\n4. In the `Run Asynchronously` branch, add the `Generate Genesys Cloud Metric` action and fill the form as follows:\n    | Field                 | Value                                                     |\n    |-----------------------|-----------------------------------------------------------"}]}, {"id": "content_2", "level": "error", "description": "The index.md file's front matter must include the following fields: title, author, indextype, icon, image, category, and summary", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 2, "lineCount": 1, "lineContent": "title: Integrate a Salesforce Metric to Genesys Cloud's Gamification System"}, {"path": "blueprint/index-draft", "lineNumber": 3, "lineCount": 1, "lineContent": "author: prince.merluza"}, {"path": "blueprint/index-draft", "lineNumber": 4, "lineCount": 1, "lineContent": "indextype: blueprint"}, {"path": "blueprint/index-draft", "lineNumber": 5, "lineCount": 1, "lineContent": "icon: blueprint"}, {"path": "blueprint/index-draft", "lineNumber": 6, "lineCount": 1, "lineContent": "image: images/cover.png"}, {"path": "blueprint/index-draft", "lineNumber": 7, "lineCount": 1, "lineContent": "category:"}, {"path": "blueprint/index-draft", "lineNumber": 8, "lineCount": 1, "lineContent": "summary: |"}]}, {"id": "content_3", "level": "error", "description": "The index.md must have a '## Scenario' section describing the problem the blueprint is trying to solve.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 16, "lineCount": 1, "lineContent": "## Scenario"}]}, {"id": "content_4", "level": "error", "description": "The index.md must have a '## Solution' section describing how blueprint solves the project.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 24, "lineCount": 1, "lineContent": "## Solution"}]}, {"id": "content_6", "level": "error", "description": "The index.md file must have a '## Prerequisites' section that describes the skillset and technical requirements an individual must have to successfully install the blueprint.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 31, "lineCount": 1, "lineContent": "## Prerequisites"}]}, {"id": "content_7", "level": "error", "description": "The index.md file should have '### Specialized knowledge' section that enumerates the skill sets that the implementor should possess in order to carry out the blueprint.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 33, "lineCount": 1, "lineContent": "### Specialized knowledge"}]}, {"id": "content_8", "level": "error", "description": "The index.md file should have a '## Implementation steps' section that enumerates the steps necessary to carry out the blueprint implementation.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 80, "lineCount": 1, "lineContent": "## Implementation steps"}]}, {"id": "content_10", "level": "error", "description": "The index.md should have a  '## Additional resources' section containing the project files section.  This section should include any additional links that will be useful for the blueprint.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 261, "lineCount": 1, "lineContent": "## Additional resources"}]}, {"id": "link_0", "level": "error", "description": "Image links in the README.md file should point to a valid image file.", "fileHighlights": []}, {"id": "link_1", "level": "error", "description": "Image links in index.md file should point to a valid image file.", "fileHighlights": [{"path": "blueprint/index-draft", "lineNumber": 14, "lineCount": 1, "lineContent": "![Flowchart for the blueprint](./images/overview.png \"Flowchart\")"}, {"path": "blueprint/index-draft", "lineNumber": 86, "lineCount": 1, "lineContent": "![Enable Gamification](./images/enable_gamification.png \"Enable Gamification\")"}, {"path": "blueprint/index-draft", "lineNumber": 95, "lineCount": 1, "lineContent": "    ![External Metric Configuration](./images/new_external_metric.png \"External Metric Configuration\")"}, {"path": "blueprint/index-draft", "lineNumber": 117, "lineCount": 1, "lineContent": "![New Custom User Field](./images/new_custom_field.png \"New Custom User Field\")"}, {"path": "blueprint/index-draft", "lineNumber": 222, "lineCount": 1, "lineContent": "![Create new flow](./images/create_new_flow.png \"New Custom User Field\")"}, {"path": "blueprint/index-draft", "lineNumber": 224, "lineCount": 1, "lineContent": "![Flow configuration](./images/flow_configuration.png \"Flow configuration\")"}, {"path": "blueprint/index-draft", "lineNumber": 236, "lineCount": 1, "lineContent": "![Flow overview](./images/flow_overview.png \"Flow overview\")"}, {"path": "blueprint/index-draft", "lineNumber": 251, "lineCount": 1, "lineContent": "![Developer Console](./images/dev_console.png \"Developer Console\")"}]}, {"id": "link_2", "level": "error", "description": "Image links in the README.md file is missing alternative text.", "fileHighlights": []}, {"id": "link_4", "level": "error", "description": "Hyperlinks in the README.md file is missing alternative text.", "fileHighlights": []}, {"id": "link_3", "level": "error", "description": "Image links in the index.md file is missing alternative text.", "fileHighlights": []}], "failed": [{"id": "struct_0", "level": "error", "description": "All Genesys Cloud blueprints must include a README.MD file.  This file should contain a brief introduction of the blueprint."}, {"id": "struct_4", "level": "error", "description": "Every Genesys Cloud blueprint should have a blueprint/index.md that contains a complete writeup in Markdown of the blueprint."}, {"id": "content_0", "level": "error", "description": "Overview image should be referred to in README.MD", "fileHighlights": []}, {"id": "content_5", "level": "error", "description": "The index.md must have a '## Content' section linking to the rest of the document.", "fileHighlights": []}, {"id": "content_9", "level": "error", "description": "The index.md file should have a '### Download the repository containing the project files' section that describe how to clone the blueprint repository from GitHub.", "fileHighlights": []}], "timestamp": "2022-11-15T06:47:44Z"}